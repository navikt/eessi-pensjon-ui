{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","pages/Container.js","pages/WaitingPanel.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","Container","className","children","classNames","to","SyntaxHighlighter","registerLanguage","jsx","WaitingPanelPage","useState","message","setMessage","label","onChawueere","nge","e","target","language","style","prism"],"mappings":"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","file":"static/js/24.aec627dc.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from 'react'\nimport { Systemtittel } from '../Nav'\nimport classNames from 'classnames'\nimport { Link } from 'react-router-dom'\n\nimport './Container.css'\nconst Container = ({ className, children }) => (\n  <div className={classNames('_container', className)}>\n    <aside>\n      <nav>\n        <Systemtittel><Link to='/'>Applications</Link></Systemtittel>\n        <ul>\n          <li><Link to='/Dashboard'>Dashboard</Link></li>\n          <li><Link to='/PDFEditor'>PDFEditor</Link></li>\n        </ul>\n        <Systemtittel><Link to='/'>Components</Link></Systemtittel>\n        <ul>\n          <li><Link to='/Alert'>Alert</Link></li>\n          <li><Link to='/Banner'>Banner</Link></li>\n          <li><Link to='/ColorPicker'>ColorPicker</Link></li>\n          <li><Link to='/CountryUtils'>CountryUtils</Link></li>\n          <li><Link to='/DatePicker'>DatePicker</Link></li>\n          <li><Link to='/File'>File</Link></li>\n          <li><Link to='/FileUpload'>FileUpload</Link></li>\n          <li><Link to='/Flag'>Flag</Link></li>\n          <li><Link to='/Modal'>Modal</Link></li>\n          <li><Link to='/MultipleSelect'>MultipleSelect</Link></li>\n          <li><Link to='/Nav'>Nav elements</Link></li>\n          <li><Link to='/Psycho'>Psycho</Link></li>\n          <li><Link to='/RefreshButton'>Refresh Button</Link></li>\n          <li><Link to='/TableSorter'>TableSorter</Link></li>\n          <li><Link to='/WaitingPanel'>WaitingPanel</Link></li>\n        </ul>\n      </nav>\n    </aside>\n    <article className={classNames('body', className)}>\n      {children}\n    </article>\n  </div>\n)\n\nexport default Container\n","import React, { useState } from 'react'\nimport Container from './Container'\nimport WaitingPanel from '../components/WaitingPanel/WaitingPanel'\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx'\nimport prism from 'react-syntax-highlighter/dist/esm/styles/prism/prism'\nimport { Input, Normaltekst, Panel, Systemtittel, Undertittel } from '../Nav'\nSyntaxHighlighter.registerLanguage('jsx', jsx)\n\nconst WaitingPanelPage = () => {\n  const [message, setMessage] = useState('Vennligst vent...')\n  return (\n    <Container>\n      <Panel className='p-4'>\n        <Systemtittel className='pt-4 pb-4'>Waiting panel</Systemtittel>\n        <Normaltekst className='pb-4'>Simple waiting panel with a spinner gif and a message.</Normaltekst>\n\n        <Input label='Waiting message' value={message} onChawueere nge={(e) => setMessage(e.target.value)} />\n        <WaitingPanel message={message} />\n\n        <SyntaxHighlighter language='javascript' style={prism}>\n          {'<WaitingPanel message={message} />'}\n        </SyntaxHighlighter>\n\n        <Undertittel className='pt-4 pb-4'>Component import</Undertittel>\n        <SyntaxHighlighter language='javascript' style={prism}>\n          {'import { WaitingPanel } from \\'eessi-pensjon-ui\\''}\n        </SyntaxHighlighter>\n        <Normaltekst className='pb-4'>Default component's classname: <code>c-waitingPanel</code></Normaltekst>\n\n        <Undertittel className='pt-4 pb-4'>React props</Undertittel>\n        <table className='tabell'>\n          <thead>\n            <tr>\n              <th>Property</th>\n              <th>Type</th>\n              <th>Required</th>\n              <th>Description</th>\n              <th>Default</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>className</td>\n              <td><code>string</code></td>\n              <td>false</td>\n              <td>Additional classnames</td>\n              <td>-</td>\n            </tr>\n            <tr>\n              <td>message</td>\n              <td><code>string</code></td>\n              <td>false</td>\n              <td>Message to display</td>\n              <td>'Vennligst vent...'</td>\n            </tr>\n            <tr>\n              <td>size</td>\n              <td><code>string</code></td>\n              <td>false</td>\n              <td>Size of the spinner. Can be one of NavFrontendSpinner values, 'XS', 'S', 'M', 'L', 'XL'</td>\n              <td>M</td>\n            </tr>\n          </tbody>\n        </table>\n      </Panel>\n    </Container>\n  )\n}\n\nexport default WaitingPanelPage\n"],"sourceRoot":""}