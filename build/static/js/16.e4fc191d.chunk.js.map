{"version":3,"sources":["applications/Dashboard/widgets/Cat/cat.jpg","applications/Dashboard/config/DashboardConfig.js","applications/Dashboard/WidgetAdd.js","applications/Dashboard/WidgetEditOptions.js","applications/Dashboard/WidgetEdit.js","applications/Dashboard/WidgetDelete.js","applications/Dashboard/Widget.js","applications/Dashboard/WidgetAddPreview.js","applications/Dashboard/WidgetAddArea.js","applications/Dashboard/WidgetContainer.js","applications/Dashboard/DashboardTabs.js","applications/Dashboard/DashboardGrid.js","applications/Dashboard/DashboardControlPanel.js","applications/Dashboard/DashboardRender.js","applications/Dashboard/Dashboard.labels.js","applications/Dashboard/config/DefaultWidgets.js","applications/Dashboard/config/DefaultLayout.js","applications/Dashboard/config/DefaultConfig.js","applications/Dashboard/DashboardAPI.js","applications/Dashboard/widgets/EkspandertBartWidget.js","applications/Dashboard/widgets/Smiley/SmileyOptionsWidget.js","applications/Dashboard/widgets/Smiley/SmileyWidget.js","applications/Dashboard/widgets/Cat/CatMidget.js","applications/Dashboard/widgets/Note/NoteOptionsWidget.js","applications/Dashboard/widgets/Note/NoteWidget.js","applications/Dashboard/widgets/Links/Links.js","applications/Dashboard/widgets/Links/LinksWidget.js","applications/Dashboard/Dashboard.js","pages/Dashboard.js"],"names":["module","exports","cols","lg","md","sm","breakpoints","margin","containerPadding","rowHeight","defaultTab","version","WidgetAddDragSource","DragSource","beginDrag","props","newId","Date","getTime","widget","type","setWidgets","widgets","concat","i","title","options","visible","endDrag","monitor","item","getItem","getDropResult","_","reject","canDrag","connect","connectDragSource","dragSource","connectDragPreview","dragPreview","isDragging","useState","mounted","setMounted","mouseOver","setMouseOver","useEffect","getEmptyImage","captureDraggingState","className","classNames","selected","hover","onMouseEnter","onMouseLeave","description","ref","WidgetEditOptions","MyWidgets","FoundWidget","find","it","properties","edit","WidgetEdit","labels","setMode","dragHereToMoveWidget","href","onClick","WidgetDelete","layout","onResize","onWidgetDelete","style","minHeight","handleWidth","handleHeight","deleteWidgetAreYouSure1","deleteWidgetAreYouSure2","Nav","id","e","stopPropagation","preventDefault","yes_delete","no_cancel","Widget","mode","Mustache","render","noWidgetForType","WidgetAddPreviewDragLayer","DragLayer","itemType","getItemType","initialOffset","getInitialSourceClientOffset","currentOffset","getSourceClientOffset","currentBreakpoint","dimensions","w","h","breakpoint","gridWidth","document","getElementById","offsetWidth","gridUnitWidth","Math","ceil","DashboardConfig","height","width","gridSizeToPixelSize","defaultW","defaultH","position","pointerEvents","zIndex","left","top","display","x","y","transform","backgroundColor","padding","border","boxShadow","getItemStyles","WidgetAddArea","availableWidgets","currentTab","dragApi","map","key","WidgetContainer","editMode","onWidgetUpdate","onWidgetResize","onWidgetFullFocus","onWidgetRestoreFocus","sizes","setSizes","newSizes","offsetHeight","oldSizes","cloneDeep","isEmpty","onUpdate","newLayout","newH","minH","maxH","onFullFocus","onRestoreFocus","DashboardTabs","layouts","onTabChange","onTabAdd","onTabDelete","undefined","newTabLabel","setNewTabLabel","seeNewTab","setSeeNewTab","tabs","Object","keys","tabLabels","label","Icons","kind","window","confirm","onDeleteTabHandler","length","defaultAktiv","indexOf","onChange","target","value","mini","ResponsiveReactGridLayout","WidthProvider","Responsive","DashboardGrid","canDrop","connectDropTarget","onBreakpointChange","onLayoutChange","autoSize","isDraggable","isResizable","measureBeforeMount","useCSSTransforms","preventCollision","draggableHandle","dragApiRef","defaultProps","WidgetDropTarget","DropTarget","drop","component","stop","hoverItem","dashboardPosition","offsetLeft","offsetTop","dragIn","minW","maxW","dragOut","dropTarget","isOver","DashboardControlPanel","addMode","onAddChange","onCancelEdit","onEditModeOn","onResetEdit","onSaveEdit","dragNewWidgets","arrangeWidgets","hideNewWidgets","addNewWidgets","editDashboard","reset","saveChanges","cancelChanges","cursor","createDragApiRef","DashboardRender","backend","HTML5Backend","WaitingPanel","paddingTop","message","loading","content","mood","default","loadDashboard","customDefaultWidgets","customDefaultLayout","customDefaultConfig","allowedWidgets","a","localStorage","config","JSON","parse","defaultConfig","instanceVersion","defaultLayouts","defaultWidgets","prototype","hasOwnProperty","call","filter","includes","widgetIds","forEach","tab","saveDashboard","setItem","stringify","saveWidgets","resetDashboard","loadAvailableWidgets","values","EkspandertBartWidget","_content","setContent","apen","collapsed","tittel","newWidget","dangerouslySetInnerHTML","__html","SmileyOptionsWidget","setMood","SmileyWidget","availableMoods","_mood","fontSize","role","aria-label","CatMidget","alt","src","require","NoteOptionsWidget","setBackgroundColor","color","NodeWidget","availableColors","NoteWidget","_id","saveContent","newContent","innerHTML","contentEditable","onBlur","resize","Links","linkCreator","to","LinksWidget","Dashboard","defaultLayout","extraWidgets","afterLayoutChange","setEditMode","setAddMode","fullFocusMode","setFullFocusMode","_setLayouts","setConfig","setCurrentTab","backupLayouts","setBackupLayouts","setCurrentBreakpoint","setAvailableWidgets","_labels","defaultLabels","Widgets","initDashboard","_availableWidgets","DashboardAPI","_widgets","_layouts","_config","setLayouts","isFunction","updatedWidget","newWidgets","changedLayout","index","findIndex","focusedWidget","newLayouts","newTab","console","log","omitBy","DashboardPage","Container"],"mappings":"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","file":"static/js/16.e4fc191d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat.59c76d8b.jpg\";","export default {\n  cols: { lg: 12, md: 3, sm: 1 },\n  breakpoints: { lg: 900, md: 600, sm: 0 },\n  margin: [10, 10],\n  containerPadding: [10, 10],\n  rowHeight: 30,\n  defaultTab: 'default',\n  version: 1\n}\n","import React, { useState, useEffect } from 'react'\nimport PT from 'prop-types'\nimport { DragSource } from 'react-dnd'\nimport { getEmptyImage } from 'react-dnd-html5-backend'\nimport classNames from 'classnames'\nimport _ from 'lodash'\n\nimport './Widget.css'\n\nexport const WidgetAdd = ({ connectDragPreview, connectDragSource, isDragging, widget }) => {\n  const [mounted, setMounted] = useState(false)\n  const [mouseOver, setMouseOver] = useState(false)\n\n  useEffect(() => {\n    if (!mounted && connectDragPreview) {\n      // Use empty image as a drag preview so browsers don't draw it\n      // and we can draw whatever we want on the custom drag layer instead.\n      connectDragPreview(getEmptyImage(), {\n        // IE fallback: specify that we'd rather screenshot the node\n        // when it already knows it's being dragged so we can hide it with CSS.\n        captureDraggingState: true\n      })\n      setMounted(true)\n    }\n  }, [mounted, connectDragPreview])\n\n  return (\n    <div\n      className={classNames('c-d-widgetAdd', {\n        selected: isDragging,\n        hover: mouseOver\n      })}\n      onMouseEnter={() => setMouseOver(true)}\n      onMouseLeave={() => setMouseOver(false)}\n      title={widget.description}\n      ref={connectDragSource}\n    >\n      <div className='p-2 content'>\n        <h6 className='c-d-widgetAdd__title'>{widget.title}</h6>\n        <p className='c-d-widgetAdd__description'>\n          <small>{widget.description}</small>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nWidgetAdd.propTypes = {\n  connectDragPreview: PT.func.isRequired,\n  connectDragSource: PT.func.isRequired,\n  isDragging: PT.bool,\n  widget: PT.object.isRequired\n}\n\nconst WidgetAddDragSource = DragSource(\n  'newWidget', {\n    beginDrag: (props) => {\n      const newId = 'w-' + new Date().getTime() + '-' + props.widget.type\n      // create new Widget from template\n      props.setWidgets(props.widgets.concat({\n        i: newId,\n        type: props.widget.type,\n        title: props.widget.title,\n        options: props.widget.options,\n        visible: true\n      }))\n      // return the object I want to send to dropTarget when dropped\n      return {\n        widget: props.widget,\n        newId: newId\n      }\n    },\n    endDrag: (props, monitor) => {\n      const item = monitor.getItem()\n      const dropResult = monitor.getDropResult()\n      // if drag was not successful, clean up\n      if (!dropResult) {\n        props.setWidgets(_.reject(props.widgets, { i: item.newId }))\n      }\n    },\n    canDrag: () => {\n      return true\n    }\n  },\n  (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: monitor.isDragging()\n  })\n)(WidgetAdd)\n\nexport default WidgetAddDragSource\n","import React from 'react'\nimport PT from 'prop-types'\nimport _ from 'lodash'\n\nconst WidgetEditOptions = (props) => {\n  const { MyWidgets, widget } = props\n\n  const FoundWidget = _.find(MyWidgets, (it) => {\n    return it.properties ? it.properties.type === widget.type : false\n  })\n\n  if (FoundWidget && FoundWidget.edit) {\n    return <FoundWidget.edit {...props} />\n  }\n  return null\n}\n\nWidgetEditOptions.propTypes = {\n  widget: PT.object.isRequired\n}\n\nexport default WidgetEditOptions\n","import React from 'react'\nimport PT from 'prop-types'\nimport WidgetEditOptions from './WidgetEditOptions'\n\nimport './Widget.css'\n\nconst WidgetEdit = (props) => {\n  const { labels, setMode } = props\n\n  return (\n    <div className='c-d-WidgetEdit'>\n      <div className='titleDiv draggableHandle'>\n        <div className='title'>\n          {labels.dragHereToMoveWidget}\n          <div className='deleteButton'>\n            <a href='#delete' onClick={() => setMode('delete')}>🗑</a>\n          </div>\n        </div>\n      </div>\n      <WidgetEditOptions {...props} />\n    </div>\n  )\n}\n\nWidgetEdit.propTypes = {\n  labels: PT.object,\n  setMode: PT.func.isRequired\n}\n\nexport default WidgetEdit\n","import React from 'react'\nimport PT from 'prop-types'\nimport * as Nav from '../../Nav'\nimport ReactResizeDetector from 'react-resize-detector'\n\nimport './Widget.css'\n\nconst WidgetDelete = ({ labels, layout, onResize, onWidgetDelete, setMode }) => {\n  const onWidgetDeleteClick = (e) => {\n    e.stopPropagation()\n    e.preventDefault()\n    onWidgetDelete(layout)\n  }\n\n  return (\n    <div className='c-d-WidgetDelete' style={{ minHeight: '300px' }}>\n      <ReactResizeDetector\n        handleWidth\n        handleHeight\n        onResize={onResize}\n      />\n      <div className='deleteText'>\n        <p>{labels.deleteWidgetAreYouSure1}</p>\n        <p>{labels.deleteWidgetAreYouSure2}</p>\n      </div>\n      <div className='buttons'>\n        <Nav.KnappBase\n          id='c-d-WidgetDelete__delete-button-id'\n          className='c-d-WidgetDelete__delete-button'\n          type='hoved'\n          onClick={onWidgetDeleteClick}\n        >\n          {labels.yes_delete}\n        </Nav.KnappBase>\n        <Nav.KnappBase\n          id='c-d-WidgetDelete__cancel-button-id'\n          className='c-d-WidgetDelete__cancel-button'\n          type='flat'\n          onClick={() => setMode('edit')}\n        >\n          {labels.no_cancel}\n        </Nav.KnappBase>\n      </div>\n    </div>\n  )\n}\n\nWidgetDelete.propTypes = {\n  labels: PT.object,\n  layout: PT.object.isRequired,\n  onResize: PT.func.isRequired,\n  onWidgetDelete: PT.func.isRequired,\n  setMode: PT.func.isRequired\n}\nexport default WidgetDelete\n","import React from 'react'\nimport PT from 'prop-types'\nimport _ from 'lodash'\nimport Mustache from 'mustache'\nimport WidgetEdit from './WidgetEdit'\nimport WidgetDelete from './WidgetDelete'\n\nconst Widget = (props) => {\n  const { labels, mode, MyWidgets, widget } = props\n  if (mode === 'edit') {\n    return <WidgetEdit {...props} />\n  }\n\n  if (mode === 'delete') {\n    return <WidgetDelete {...props} />\n  }\n\n  const FoundWidget = _.find(MyWidgets, (it) => {\n    return it.properties ? it.properties.type === widget.type : false\n  })\n\n  if (FoundWidget) {\n    return <FoundWidget {...props} />\n  }\n\n  return <div>{Mustache.render(labels.noWidgetForType, { type: widget.type })}</div>\n}\n\nWidget.propTypes = {\n  labels: PT.object,\n  mode: PT.string,\n  MyWidgets: PT.object,\n  widget: PT.object.isRequired\n}\n\nexport default Widget\n","import React from 'react'\nimport PT from 'prop-types'\nimport { DragLayer } from 'react-dnd'\nimport Widget from './Widget'\nimport DashboardConfig from './config/DashboardConfig'\n\nexport const WidgetAddPreview = ({ currentBreakpoint, currentOffset, initialOffset, isDragging, labels, item }) => {\n  if (!isDragging) {\n    return null\n  }\n\n  const layerStyles = {\n    position: 'fixed',\n    pointerEvents: 'none',\n    zIndex: 100,\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%'\n  }\n\n  const gridSizeToPixelSize = (w, h, breakpoint) => {\n    const gridWidth = document.getElementById('dashboardGrid').offsetWidth\n    const gridUnitWidth = Math.ceil(gridWidth / DashboardConfig.cols[breakpoint])\n    const dimension = {\n      height: (h * (DashboardConfig.rowHeight + 10) - 10) + 'px',\n      width: (w * gridUnitWidth - 10) + 'px'\n    }\n    return dimension\n  }\n\n  const widget = item.widget\n  const dimensions = gridSizeToPixelSize(\n    widget.layout[currentBreakpoint].defaultW,\n    widget.layout[currentBreakpoint].defaultH,\n    currentBreakpoint\n  )\n\n  const getItemStyles = (initialOffset, currentOffset, dimensions) => {\n    if (!initialOffset || !currentOffset) {\n      return {\n        display: 'none'\n      }\n    }\n    const { x, y } = currentOffset\n    return {\n      transform: `translate(${x}px, ${y}px)`,\n      backgroundColor: 'white',\n      width: dimensions.width,\n      height: dimensions.height,\n      padding: '10px',\n      border: '1px solid lightgrey',\n      boxShadow: '3px 3px 3px lightgrey'\n    }\n  }\n\n  return (\n    <div className='c-d-widgetAddPreview' style={layerStyles}>\n      <div style={getItemStyles(initialOffset, currentOffset, dimensions)}>\n        <Widget widget={widget} labels={labels} />\n      </div>\n    </div>\n  )\n}\n\nWidgetAddPreview.propTypes = {\n  currentBreakpoint: PT.string.isRequired,\n  currentOffset: PT.object,\n  initialOffset: PT.object,\n  isDragging: PT.bool,\n  item: PT.object,\n  labels: PT.object\n}\n\nconst WidgetAddPreviewDragLayer = DragLayer(monitor => ({\n  item: monitor.getItem(),\n  itemType: monitor.getItemType(),\n  initialOffset: monitor.getInitialSourceClientOffset(),\n  currentOffset: monitor.getSourceClientOffset(),\n  isDragging: monitor.isDragging()\n}))(WidgetAddPreview)\n\nexport default WidgetAddPreviewDragLayer\n","import React from 'react'\nimport PT from 'prop-types'\nimport WidgetAdd from './WidgetAdd'\nimport WidgetAddPreview from './WidgetAddPreview'\nimport './Widget.css'\n\nconst WidgetAddArea = ({ availableWidgets, currentBreakpoint, currentTab, dragApi, labels, setWidgets, widgets }) => (\n  <div className='c-d-widgetAddArea'>\n    <WidgetAddPreview\n      labels={labels}\n      currentTab={currentTab}\n      currentBreakpoint={currentBreakpoint}\n    />\n    {availableWidgets.map((widget, i) => {\n      return (\n        <WidgetAdd\n          key={i}\n          widgets={widgets}\n          setWidgets={setWidgets}\n          widget={widget}\n          dragApi={dragApi}\n        />\n      )\n    })}\n  </div>\n)\n\nWidgetAddArea.propTypes = {\n  availableWidgets: PT.array.isRequired,\n  currentBreakpoint: PT.string.isRequired,\n  currentTab: PT.string.isRequired,\n  dragApi: PT.object,\n  labels: PT.object,\n  setWidgets: PT.func.isRequired,\n  widgets: PT.array.isRequired\n}\n\nexport default WidgetAddArea\n","import React, { useState, useEffect } from 'react'\nimport PT from 'prop-types'\nimport _ from 'lodash'\nimport Widget from './Widget'\nimport './Widget.css'\n\nconst WidgetContainer = (props) => {\n  const { currentBreakpoint, editMode, layout, onWidgetUpdate, onWidgetResize, onWidgetFullFocus, onWidgetRestoreFocus, rowHeight, widget } = props\n\n  const [sizes, setSizes] = useState({ lg: {}, md: {}, sm: {} })\n  const [mouseOver, setMouseOver] = useState(false)\n  const [mounted, setMounted] = useState(false)\n  const [mode, setMode] = useState('view')\n\n  useEffect(() => {\n    const getSizes = () => {\n      return {\n        width: document.getElementById('widget-' + layout.i).offsetWidth,\n        height: document.getElementById('widget-' + layout.i).offsetHeight\n      }\n    }\n\n    if (!mounted) {\n      if (document.getElementById('widget-' + layout.i)) {\n        const newSizes = getSizes()\n        const oldSizes = _.cloneDeep(sizes)\n        if (_.isEmpty(oldSizes[currentBreakpoint]) || (\n          ((oldSizes[currentBreakpoint].height !== newSizes.height) ||\n          (oldSizes[currentBreakpoint].width !== newSizes.width)))) {\n          oldSizes[currentBreakpoint] = newSizes\n          setSizes(oldSizes)\n        }\n      }\n      setMounted(true)\n    }\n  }, [mounted, layout, sizes, currentBreakpoint])\n\n  useEffect(() => {\n    if (mode === 'view' && editMode && mouseOver) {\n      setMode('edit')\n    }\n    if (mode === 'edit' && !mouseOver) {\n      setMode('view')\n    }\n  }, [mode, editMode, mouseOver])\n\n  const onUpdate = (widget) => {\n    onWidgetUpdate(widget, layout)\n  }\n\n  const onFullFocus = () => {\n    onWidgetFullFocus(widget)\n  }\n\n  const onRestoreFocus = () => {\n    onWidgetRestoreFocus()\n  }\n\n  const onResize = (width, height) => {\n    if (!height || !width) {\n      return\n    }\n    if (onWidgetResize) {\n      const newLayout = _.cloneDeep(layout)\n      // these 10 are padding/margin added to each h\n      let newH = Math.ceil((height + 10) / (rowHeight + 10))\n\n      // do not shrink below minimum H\n      if (newH < newLayout.minH) {\n        // console.log('New h ' + newH + ' rejected because minH is ' + newLayout.minH)\n        newH = newLayout.minH\n      }\n\n      if (newH > newLayout.maxH) {\n        // console.log('New h ' + newH + ' rejected because maxH is ' + newLayout.maxH)\n        newH = newLayout.maxH\n      }\n\n      // in edit mode, don't make it smaller than view mode\n      if (mode === 'edit' && newH < newLayout.h) {\n        // console.log('New h ' + newH + ' rejected because edit mode and h is ' + newLayout.h)\n        newH = newLayout.h\n      }\n      if (mode !== 'edit' && newH !== newLayout.h) {\n        // console.log('Resized ' + newLayout.i + ' from h ' + newLayout.h + ' to ' + newH)\n        newLayout.h = newH\n        onWidgetResize(newLayout)\n      }\n    }\n  }\n\n  if (!widget) {\n    return null\n  }\n\n  let backgroundColor = widget.options.backgroundColor || 'transparent'\n  if (editMode) {\n    backgroundColor = 'white'\n  }\n\n  return (\n    <div\n      className='c-d-Widget' style={{ backgroundColor }}\n      onMouseEnter={() => setMouseOver(true)}\n      onMouseLeave={() => setMouseOver(false)}\n    >\n      <Widget\n        {...props}\n        mode={mode}\n        setMode={setMode}\n        onUpdate={onUpdate}\n        onResize={onResize}\n        onFullFocus={onFullFocus}\n        onRestoreFocus={onRestoreFocus}\n      />\n    </div>\n  )\n}\n\nWidgetContainer.propTypes = {\n  currentBreakpoint: PT.string.isRequired,\n  editMode: PT.bool.isRequired,\n  layout: PT.object.isRequired,\n  onWidgetUpdate: PT.func.isRequired,\n  onWidgetResize: PT.func.isRequired,\n  onWidgetFullFocus: PT.func.isRequired,\n  onWidgetRestoreFocus: PT.func.isRequired,\n  rowHeight: PT.number.isRequired,\n  widget: PT.object.isRequired\n}\n\nexport default WidgetContainer\n","import React, { useState } from 'react'\nimport PT from 'prop-types'\nimport { Input, Knapp, Tabs } from '../../Nav'\nimport Icons from '../../components/Icons/Icons'\n\nconst DashboardTabs = ({ currentTab, editMode, layouts, onTabChange, onTabAdd, onTabDelete }) => {\n  const [newTabLabel, setNewTabLabel] = useState(undefined)\n  const [seeNewTab, setSeeNewTab] = useState(false)\n  const tabs = Object.keys(layouts)\n\n  const onDeleteTabHandler = (key) => {\n    if (window.confirm('delete ' + key + '?')) {\n      onTabDelete(key)\n    }\n  }\n\n  const tabLabels = tabs.map(key => ({\n    label: (\n      <>\n        <span>{key}</span>\n        {editMode ? (\n          <Icons\n            className='ml-2' kind='close' onClick={(e) => {\n              e.preventDefault()\n              e.stopPropagation()\n              onDeleteTabHandler(key)\n            }}\n          />\n        ) : null}\n      </>\n    )\n  }))\n\n  if (!editMode && tabs.length <= 1) {\n    return null\n  }\n\n  return (\n    <div className='d-flex align-items-center'>\n      <Tabs\n        tabs={tabLabels}\n        defaultAktiv={tabs.indexOf(currentTab)}\n        onChange={(e, i) => {\n          if (tabs[i] !== 'new') {\n            onTabChange(tabs[i])\n          }\n        }}\n      />\n      {editMode ? (\n        seeNewTab ? (\n          <div className='d-flex p-0'>\n            <Input\n              label=''\n              onChange={(e) => {\n                e.preventDefault()\n                e.stopPropagation()\n                setNewTabLabel(e.target.value)\n              }}\n            />\n            <Knapp\n              mini className='ml-2' onClick={(e) => {\n                e.preventDefault()\n                onTabAdd(newTabLabel)\n                setNewTabLabel(undefined)\n                setSeeNewTab(false)\n              }}\n            >+\n            </Knapp>\n          </div>\n        ) : (\n          <Icons\n            kind='plus' onClick={(e) => {\n              e.preventDefault()\n              e.stopPropagation()\n              setSeeNewTab(true)\n            }}\n          />\n        )\n      ) : null}\n    </div>\n  )\n}\n\nDashboardTabs.propTypes = {\n  currentTab: PT.string.isRequired,\n  layouts: PT.object.isRequired,\n  onTabAdd: PT.func.isRequired,\n  onTabDelete: PT.func.isRequired,\n  onTabChange: PT.func.isRequired\n}\nexport default DashboardTabs\n","import React from 'react'\nimport PT from 'prop-types'\nimport _ from 'lodash'\nimport { Responsive, WidthProvider } from 'react-grid-layout'\nimport { DropTarget } from 'react-dnd'\nimport classNames from 'classnames'\nimport WidgetContainer from './WidgetContainer'\nimport DashboardConfig from './config/DashboardConfig'\nimport DashboardTabs from './DashboardTabs'\n\nconst ResponsiveReactGridLayout = WidthProvider(Responsive)\n\nexport const DashboardGrid = (props) => {\n  const { canDrop, connectDropTarget, currentTab, currentBreakpoint, dragApi, editMode, labels, layouts, MyWidgets } = props\n  const { onBreakpointChange, onLayoutChange, onWidgetFullFocus, onWidgetRestoreFocus, onWidgetUpdate } = props\n  const { onWidgetResize, onWidgetDelete, onTabAdd, onTabChange, onTabDelete, rowHeight, widgets } = props\n\n  if (_.isEmpty(layouts) || _.isEmpty(layouts[currentTab])) {\n    return null\n  }\n  return connectDropTarget(\n    <div\n      id='dashboardGrid'\n      className={classNames('c-dashboard__grid', {\n        canDrop: canDrop\n      })}\n    >\n      <DashboardTabs\n        editMode={editMode}\n        onTabAdd={onTabAdd}\n        onTabDelete={onTabDelete}\n        onTabChange={onTabChange}\n        currentTab={currentTab}\n        layouts={layouts}\n      />\n      <ResponsiveReactGridLayout\n        {...props}\n        breakpoints={DashboardConfig.breakpoints}\n        autoSize\n        margin={DashboardConfig.margin}\n        containerPadding={DashboardConfig.containerPadding}\n        isDraggable={editMode}\n        isResizable={editMode}\n        layouts={layouts[currentTab] || {}}\n        onBreakpointChange={onBreakpointChange}\n        onLayoutChange={onLayoutChange}\n        measureBeforeMount={false}\n        useCSSTransforms={false}\n        preventCollision={false}\n        draggableHandle='.draggableHandle'\n        dragApiRef={dragApi}\n      >\n        {_.map(layouts[currentTab][currentBreakpoint], (layout) => {\n          return (\n            <div id={'widget-' + layout.i} key={layout.i}>\n              <WidgetContainer\n                widget={_.find(widgets, { i: layout.i })}\n                currentBreakpoint={currentBreakpoint}\n                editMode={editMode}\n                layout={layout}\n                labels={labels}\n                onWidgetResize={onWidgetResize}\n                onWidgetUpdate={onWidgetUpdate}\n                onWidgetDelete={onWidgetDelete}\n                onWidgetFullFocus={onWidgetFullFocus}\n                onWidgetRestoreFocus={onWidgetRestoreFocus}\n                rowHeight={rowHeight}\n                MyWidgets={MyWidgets}\n              />\n            </div>\n          )\n        })}\n      </ResponsiveReactGridLayout>\n    </div>)\n}\n\nDashboardGrid.propTypes = {\n  connectDropTarget: PT.func.isRequired,\n  currentBreakpoint: PT.string.isRequired,\n  currentTab: PT.string.isRequired,\n  dragApi: PT.object.isRequired,\n  editMode: PT.bool.isRequired,\n  labels: PT.object,\n  layouts: PT.object.isRequired,\n  onBreakpointChange: PT.func.isRequired,\n  onLayoutChange: PT.func.isRequired,\n  onWidgetUpdate: PT.func.isRequired,\n  onWidgetResize: PT.func.isRequired,\n  onWidgetDelete: PT.func.isRequired,\n  onWidgetFullFocus: PT.func.isRequired,\n  onWidgetRestoreFocus: PT.func.isRequired,\n  onTabChange: PT.func.isRequired,\n  rowHeight: PT.number.isRequired,\n  widgets: PT.array.isRequired\n}\n\nDashboardGrid.defaultProps = DashboardConfig\n\nconst WidgetDropTarget = DropTarget(\n  ['newWidget'],\n  {\n    canDrop: props => {\n      return true\n    },\n    drop: (props, monitor, component) => {\n      const position = monitor.getSourceClientOffset()\n      // this removes placeholder, dragApi will add widget to layout\n      props.dragApi.value.stop({\n        position: {\n          left: position.x,\n          top: position.y\n        }\n      })\n    },\n    hover: (props, monitor, component) => {\n      const hoverItem = monitor.getItem()\n      const position = monitor.getSourceClientOffset()\n      const dashboardPosition = {\n        x: document.getElementById('dashboardGrid').offsetLeft,\n        y: document.getElementById('dashboardGrid').offsetTop\n      }\n\n      if (props.dragApi.value) {\n        if (dashboardPosition.x < position.x && dashboardPosition.y < position.y) {\n          const widget = hoverItem.widget.layout[props.currentBreakpoint]\n          props.dragApi.value.dragIn({\n            i: hoverItem.newId,\n            w: widget.defaultW,\n            h: widget.defaultH,\n            minH: widget.minH,\n            maxH: widget.maxH,\n            minW: widget.minW,\n            maxW: widget.maxW,\n            position: {\n              left: position.x,\n              top: position.y\n            }\n          })\n        } else {\n          props.dragApi.value.dragOut({\n            position: {\n              left: position.x,\n              top: position.y\n            }\n          })\n        }\n      }\n    }\n  },\n  (connect, monitor) => {\n    return {\n      connectDropTarget: connect.dropTarget(),\n      isOver: !!monitor.isOver(),\n      canDrop: !!monitor.canDrop()\n    }\n  }\n)(DashboardGrid)\n\nexport default WidgetDropTarget\n","import React from 'react'\nimport PT from 'prop-types'\nimport DashboardConfig from './config/DashboardConfig'\nimport Icons from '../../components/Icons/Icons'\nconst DashboardControlPanel = (props) => {\n  const { addMode, editMode, labels, onAddChange, onCancelEdit, onEditModeOn, onResetEdit, onSaveEdit } = props\n\n  const onResetEditHandler = () => {\n    if (window.confirm(labels.editDashboard + '?')) {\n      onResetEdit()\n    }\n  }\n\n  return (\n    <div className='c-dashboard__controlPanel pt-3 pb-1 pr-3 pl-3'>\n      <div className='d-inline-block'>\n        {editMode\n          ? addMode ? labels.dragNewWidgets : labels.arrangeWidgets\n          : null}\n      </div>\n      <div className='c-dashboard__controlPanel-buttons'>\n        {editMode ? (\n          <button\n            id='c-dashboard__controlPanel-add-button-id'\n            className='c-dashboard__controlPanel-add-button mr-2'\n            onClick={onAddChange}\n          >\n            {!addMode ? labels.addNewWidgets : labels.hideNewWidgets}\n          </button>\n        ) : null}\n        {!editMode ? (\n          <>\n            <Icons\n              kind='settings'\n              style={{ cursor: 'pointer' }}\n              title={labels.editDashboard}\n              id='c-dashboard__controlPanel-edit-icon-id'\n              className='c-dashboard__controlPanel-edit-icon'\n              onClick={onEditModeOn}\n            />\n            <label id='svg-inline--fa-title' style={{ display: 'none' }}>{labels.editDashboard}</label>\n          </>\n        ) : (\n          <>\n            <button\n              id='c-dashboard__controlPanel-reset-button-id'\n              className='c-dashboard__controlPanel-reset-button mr-2'\n              onClick={onResetEditHandler}\n            >\n              {labels.reset}\n            </button>\n            <button\n              id='c-dashboard__controlPanel-save-button-id'\n              className='c-dashboard__controlPanel-save-button mr-2'\n              onClick={onSaveEdit}\n            >\n              {labels.saveChanges}\n            </button>\n            <button\n              id='c-dashboard__controlPanel-cancel-button-id'\n              className='c-dashboard__controlPanel-cancel-button mr-2'\n              onClick={onCancelEdit}\n            >\n              {labels.cancelChanges}\n            </button>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nDashboardControlPanel.propTypes = {\n  addMode: PT.bool.isRequired,\n  editMode: PT.bool.isRequired,\n  labels: PT.object,\n  onAddChange: PT.func.isRequired,\n  onCancelEdit: PT.func.isRequired,\n  onEditModeOn: PT.func.isRequired,\n  onSaveEdit: PT.func.isRequired,\n  onResetEdit: PT.func.isRequired\n}\n\nDashboardControlPanel.defaultProps = DashboardConfig\nexport default DashboardControlPanel\n","import React from 'react'\nimport PT from 'prop-types'\nimport { DndProvider } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport { createDragApiRef } from 'react-grid-layout'\nimport classNames from 'classnames'\nimport WidgetAddArea from './WidgetAddArea'\nimport DashboardGrid from './DashboardGrid'\nimport DashboardControlPanel from './DashboardControlPanel'\nimport WaitingPanel from '../../components/WaitingPanel/WaitingPanel'\nimport 'react-grid-layout/css/styles.css'\nimport 'react-resizable/css/styles.css'\nimport './Dashboard.css'\n\nconst dragApi = createDragApiRef()\n\nexport const DashboardRender = ({\n  addMode, availableWidgets, currentTab, currentBreakpoint, editMode, labels, layouts, mounted, MyWidgets, onAddChange,\n  onBreakpointChange, onCancelEdit, onEditModeOn, onLayoutChange, onResetEdit, onSaveEdit, onTabAdd, onTabDelete, onTabChange,\n  onWidgetFullFocus, onWidgetRestoreFocus, onWidgetDelete, onWidgetResize, onWidgetUpdate, setWidgets, widgets\n}) => {\n  if (!mounted) {\n    return (\n      <WaitingPanel className='c-dashboardrender__loading' style={{ paddingTop: '3rem' }} message={labels.loading} />\n    )\n  } else {\n    return (\n      <div className={classNames('c-dashboard', currentBreakpoint)}>\n        <DndProvider backend={HTML5Backend}>\n          <DashboardControlPanel\n            labels={labels}\n            addMode={addMode}\n            editMode={editMode}\n            onEditModeOn={onEditModeOn}\n            onCancelEdit={onCancelEdit}\n            onSaveEdit={onSaveEdit}\n            onResetEdit={onResetEdit}\n            onAddChange={onAddChange}\n          />\n          {addMode ? (\n            <WidgetAddArea\n              currentTab={currentTab}\n              availableWidgets={availableWidgets}\n              labels={labels}\n              currentBreakpoint={currentBreakpoint}\n              widgets={widgets}\n              setWidgets={setWidgets}\n              dragApi={dragApi}\n            />\n          )\n            : null}\n          <DashboardGrid\n            editMode={editMode}\n            layouts={layouts}\n            widgets={widgets}\n            mounted={mounted}\n            currentBreakpoint={currentBreakpoint}\n            onBreakpointChange={onBreakpointChange}\n            currentTab={currentTab}\n            onTabChange={onTabChange}\n            onTabAdd={onTabAdd}\n            onTabDelete={onTabDelete}\n            onLayoutChange={onLayoutChange}\n            onWidgetUpdate={onWidgetUpdate}\n            onWidgetResize={onWidgetResize}\n            onWidgetDelete={onWidgetDelete}\n            onWidgetFullFocus={onWidgetFullFocus}\n            onWidgetRestoreFocus={onWidgetRestoreFocus}\n            labels={labels}\n            dragApi={dragApi}\n            MyWidgets={MyWidgets}\n          />\n        </DndProvider>\n      </div>\n    )\n  }\n}\n\nDashboardRender.propTypes = {\n  addMode: PT.bool.isRequired,\n  availableWidgets: PT.array.isRequired,\n  currentBreakpoint: PT.string.isRequired,\n  editMode: PT.bool.isRequired,\n  labels: PT.object,\n  layouts: PT.object.isRequired,\n  onAddChange: PT.func.isRequired,\n  onBreakpointChange: PT.func.isRequired,\n  onCancelEdit: PT.func.isRequired,\n  onEditModeOn: PT.func.isRequired,\n  onLayoutChange: PT.func.isRequired,\n  onResetEdit: PT.func.isRequired,\n  onTabChange: PT.func.isRequired,\n  onSaveEdit: PT.func.isRequired,\n  onWidgetDelete: PT.func.isRequired,\n  onWidgetResize: PT.func.isRequired,\n  onWidgetUpdate: PT.func.isRequired,\n  onWidgetFullFocus: PT.func.isRequired,\n  onWidgetRestoreFocus: PT.func.isRequired,\n  widgets: PT.array\n}\nexport default DashboardRender\n","export default {\n  loading: 'Laster opp...',\n  dragNewWidgets: 'Dra nye widgeter til dashbordet',\n  arrangeWidgets: 'Ordne widgets, og lagre eller avbryt endringer',\n  addNewWidgets: 'Legg til nye widgeter',\n  hideNewWidgets: 'Skjule nye widgeter',\n  editDashboard: 'Rediger dashbordet',\n  reset: 'Nullstill dashbordet',\n  saveChanges: 'Lagre endringer',\n  cancelChanges: 'Glem endringer',\n  noWidgetForType: 'Ingen widget til type {{type}}',\n  deleteWidgetAreYouSure1: 'Er du sikker på at du vil slett dette widget?',\n  deleteWidgetAreYouSure2: 'Du kan legg til andre senere, men alle innstillinger vil gå tapt',\n  dragHereToMoveWidget: 'Dra her for å flytte widgeten',\n  yes_delete: 'Yes, delete',\n  no_cancel: 'No, cancel'\n}\n","export default [{\n  i: 'w-1-note',\n  type: 'note',\n  title: 'Note widget',\n  visible: true,\n  options: {\n    backgroundColor: 'yellow',\n    content: '<ul><li>Eggs</li><li>Milk</li><li>Bread</li></ul>'\n  }\n}, {\n  i: 'w-2-smiley',\n  type: 'smiley',\n  title: 'Smiley widget',\n  visible: true,\n  options: {\n    mood: '😁'\n  }\n}, {\n  i: 'w-3-cat',\n  type: 'cat',\n  title: 'Cat midget',\n  visible: true,\n  options: {}\n}]\n","export default {\n  default: {\n    lg: [\n      { i: 'w-1-note', x: 0, y: 0, w: 4, h: 5, minW: 4, maxW: 6, minH: 5, maxH: 999 },\n      { i: 'w-2-smiley', x: 4, y: 0, w: 4, h: 5, minW: 2, maxW: 4, minH: 5, maxH: 999 },\n      { i: 'w-3-cat', x: 8, y: 0, w: 4, h: 6, minW: 4, maxW: 12, minH: 2, maxH: 999 }\n    ],\n    md: [\n      { i: 'w-1-note', x: 0, y: 0, w: 2, h: 6, minW: 2, maxW: 3, minH: 1, maxH: 999 },\n      { i: 'w-2-smiley', x: 2, y: 0, w: 1, h: 6, minW: 1, maxW: 3, minH: 2, maxH: 999 },\n      { i: 'w-3-cat', x: 0, y: 3, w: 2, h: 2, minW: 2, maxW: 3, minH: 2, maxH: 999 }\n    ],\n    sm: [\n      { i: 'w-1-note', x: 0, y: 0, w: 1, h: 1, minW: 1, maxW: 1, minH: 1, maxH: 999 },\n      { i: 'w-2-smiley', x: 1, y: 0, w: 1, h: 6, minW: 1, maxW: 1, minH: 2, maxH: 999 },\n      { i: 'w-3-cat', x: 2, y: 0, w: 1, h: 2, minW: 1, maxW: 1, minH: 2, maxH: 999 }\n    ]\n  }\n}\n","export default {\r\n  version: 1\r\n}\r\n","/* global localStorage */\n\nimport defaultWidgets from './config/DefaultWidgets'\nimport defaultLayouts from './config/DefaultLayout'\nimport defaultConfig from './config/DefaultConfig'\nimport DashboardConfig from './config/DashboardConfig'\nimport _ from 'lodash'\n\nconst dashboardNeedsUpgrade = (instanceVersion, dashboardVersion) => {\n  return dashboardVersion > instanceVersion\n}\n\nexport const loadDashboard = async (id, customDefaultWidgets, customDefaultLayout, customDefaultConfig, allowedWidgets) => {\n  let layouts, widgets\n  let config = await localStorage.getItem(id + '-config')\n  config = config ? JSON.parse(config) : customDefaultConfig\n  if (!config) {\n    config = defaultConfig\n  }\n  if (dashboardNeedsUpgrade(config.version, DashboardConfig.version)) {\n    layouts = customDefaultLayout || defaultLayouts\n    widgets = customDefaultWidgets || defaultWidgets\n  } else {\n    layouts = await localStorage.getItem(id + '-layouts')\n    layouts = layouts ? JSON.parse(layouts) : customDefaultLayout\n    if (!layouts) {\n      layouts = defaultLayouts\n    }\n    widgets = await localStorage.getItem(id + '-widgets')\n    widgets = widgets ? JSON.parse(widgets) : customDefaultWidgets\n    if (!widgets) {\n      widgets = defaultWidgets\n    }\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(layouts, 'default') && Object.prototype.hasOwnProperty.call(layouts, 'lg')) {\n    layouts = {\n      default: {\n        lg: layouts.lg,\n        md: layouts.md,\n        sm: layouts.sm\n      }\n    }\n  }\n\n  widgets = allowedWidgets ? widgets.filter((w) => {\n    return _.includes(allowedWidgets, w.type)\n  }) : widgets\n  const widgetIds = widgets.map(w => w.i)\n  if (!_.isEmpty(widgetIds)) {\n    Object.keys(layouts).forEach((tab) => {\n      Object.keys(layouts[tab]).forEach((breakpoint) => {\n        layouts[tab][breakpoint] = layouts[tab][breakpoint].filter((w) => {\n          return _.includes(widgetIds, w.i)\n        })\n      })\n    })\n  }\n  return [widgets, layouts, config]\n}\n\nexport const saveDashboard = async (id, widgets, layouts, config) => {\n  await localStorage.setItem(id + '-config', JSON.stringify(config))\n  await localStorage.setItem(id + '-widgets', JSON.stringify(widgets))\n  await localStorage.setItem(id + '-layouts', JSON.stringify(layouts))\n}\n\nexport const saveWidgets = async (id, widgets) => {\n  await localStorage.setItem(id + '-widgets', JSON.stringify(widgets))\n}\n\nexport const resetDashboard = async (id, customDefaultWidgets, customDefaultLayout, customDefaultConfig) => {\n  await localStorage.setItem(id + '-config', JSON.stringify(customDefaultConfig || defaultConfig))\n  await localStorage.setItem(id + '-widgets', JSON.stringify(customDefaultWidgets || defaultWidgets))\n  await localStorage.setItem(id + '-layouts', JSON.stringify(customDefaultLayout || defaultLayouts))\n}\n\nexport const loadAvailableWidgets = (widgets, allowedWidgets) => {\n  if (!allowedWidgets) {\n    return _.values(widgets).map(widget => widget.properties)\n  }\n  return _.values(widgets)\n    .filter(widget => {\n      return _.includes(allowedWidgets, widget.properties.type)\n    })\n    .map(widget => widget.properties)\n}\n","import React, { useState, useEffect } from 'react'\nimport PT from 'prop-types'\nimport _ from 'lodash'\nimport * as Nav from '../../../Nav'\nimport ReactResizeDetector from 'react-resize-detector'\n\nconst EkspandertBartWidget = ({ content, onResize, onUpdate, widget }) => {\n  const [_content, setContent] = useState(content || widget.options.content)\n\n  const onClick = () => {\n    const newWidget = _.cloneDeep(widget)\n    newWidget.options.collapsed = !newWidget.options.collapsed\n    onUpdate(newWidget)\n  }\n\n  useEffect(() => {\n    if (content && content !== _content) {\n      setContent(content)\n    }\n  }, [content, _content])\n\n  const _onResize = (w, h) => {\n    if (onResize) {\n      // give more 50 for the panel header\n      onResize(w, h + 60)\n    }\n  }\n\n  return (\n    <div className='w-EkspandertbartWidget'>\n      <Nav.Ekspanderbartpanel\n        apen={!widget.options.collapsed}\n        tittel={widget.title || ''}\n        onClick={onClick}\n      >\n        <div>\n          <ReactResizeDetector\n            handleWidth\n            handleHeight\n            onResize={_onResize}\n          />\n          {widget.options.collapsed === true\n            ? ''\n            : (\n              <div\n                className='content'\n                dangerouslySetInnerHTML={{ __html: _content }}\n              />\n            )}\n        </div>\n      </Nav.Ekspanderbartpanel>\n    </div>\n  )\n}\n\nEkspandertBartWidget.properties = {\n  type: 'ekspandertbart',\n  title: 'Ekspandertbart widget',\n  description: 'Widget that can collapse',\n  layout: {\n    lg: { minW: 6, maxW: 12, defaultW: 6, minH: 2, maxH: 999, defaultH: 6 },\n    md: { minW: 2, maxW: 3, defaultW: 2, minH: 2, maxH: 999, defaultH: 3 },\n    sm: { minW: 1, maxW: 1, defaultW: 1, minH: 2, maxH: 999, defaultH: 3 }\n  },\n  options: {\n    collapsed: false,\n    content: ''\n  }\n}\n\nEkspandertBartWidget.propTypes = {\n  content: PT.string,\n  onResize: PT.func.isRequired,\n  onUpdate: PT.func.isRequired,\n  widget: PT.object.isRequired\n}\n\nexport default EkspandertBartWidget\n","import React, { useState } from 'react'\r\nimport PT from 'prop-types'\r\nimport _ from 'lodash'\r\nimport * as Nav from '../../../../Nav'\r\nimport SmileyWidget from './SmileyWidget'\r\n\r\nconst SmileyOptionsWidget = ({ layout, onWidgetUpdate, widget }) => {\r\n  const [mood, setMood] = useState(widget.options.mood)\r\n\r\n  const chooseMood = (e) => {\r\n    const newWidget = _.cloneDeep(widget)\r\n    newWidget.options.mood = e.target.value\r\n    setMood(e.target.value)\r\n    onWidgetUpdate(newWidget, layout)\r\n  }\r\n\r\n  return (\r\n    <div className='w-SmileyOptionsWidget p-3'>\r\n      <Nav.Select\r\n        id='w-SmileyOptionsWidget__mood-select-id'\r\n        label='mood'\r\n        value={mood || ''}\r\n        onChange={chooseMood}\r\n      >\r\n        {SmileyWidget.properties.options.availableMoods.map(_mood => {\r\n          return <option key={_mood.label} value={_mood.value}>{_mood.label}{' - '}{_mood.value}</option>\r\n        })}\r\n      </Nav.Select>\r\n    </div>\r\n  )\r\n}\r\n\r\nSmileyOptionsWidget.propTypes = {\r\n  layout: PT.object.isRequired,\r\n  onWidgetUpdate: PT.func.isRequired,\r\n  widget: PT.object.isRequired\r\n}\r\n\r\nexport default SmileyOptionsWidget\r\n","import React, { useState, useEffect } from 'react'\nimport PT from 'prop-types'\nimport ReactResizeDetector from 'react-resize-detector'\nimport SmileyOptionsWidget from './SmileyOptionsWidget'\nimport './SmileyWidget.css'\n\nconst SmileyWidget = ({ onResize, widget }) => {\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    if (!mounted && onResize) {\n      onResize()\n      setMounted(true)\n    }\n  }, [mounted, onResize])\n\n  return (\n    <div className='w-SmileyWidget p-3 text-center'>\n      <ReactResizeDetector\n        handleWidth\n        handleHeight\n        onResize={onResize}\n      />\n      <h4>Today's mood</h4>\n      <p style={{\n        fontSize: '100px'\n      }}\n      >\n        <span className='w-SmileyWidget__smiley' role='img' aria-label='smiley'>\n          {widget.options.mood}\n        </span>\n      </p>\n    </div>\n  )\n}\n\nSmileyWidget.properties = {\n  type: 'smiley',\n  title: 'Smiley widget',\n  description: 'Widget with a 😁',\n  layout: {\n    lg: { minW: 2, maxW: 4, defaultW: 2, minH: 6, defaultH: 6, maxH: 999 },\n    md: { minW: 1, maxW: 3, defaultW: 1, minH: 6, defaultH: 6, maxH: 999 },\n    sm: { minW: 1, maxW: 1, defaultW: 1, minH: 6, defaultH: 6, maxH: 999 }\n  },\n  options: {\n    backgroundColor: 'white',\n    mood: '😁',\n    availableMoods: [\n      { label: 'grin', value: '😁' },\n      { label: 'happy', value: '😃' },\n      { label: 'smiling', value: '😊' },\n      { label: 'unamused', value: '😒' },\n      { label: 'angry', value: '😠' },\n      { label: 'pouting', value: '😡' }\n    ]\n  }\n}\n\nSmileyWidget.edit = SmileyOptionsWidget\n\nSmileyWidget.propTypes = {\n  onResize: PT.func.isRequired,\n  widget: PT.object.isRequired\n}\n\nexport default SmileyWidget\n","import React, { useState, useEffect } from 'react'\nimport PT from 'prop-types'\nimport ReactResizeDetector from 'react-resize-detector'\n\nimport './CatMidget.css'\n\nconst CatMidget = ({ onResize }) => {\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    if (!mounted && onResize) {\n      onResize()\n      setMounted(true)\n    }\n  }, [mounted, onResize])\n\n  return (\n    <div className='w-catMidget'>\n      <ReactResizeDetector\n        handleWidth\n        handleHeight\n        onResize={onResize}\n      />\n      <img alt='cat' src={require('./cat.jpg')} />\n    </div>\n  )\n}\n\nCatMidget.properties = {\n  type: 'cat',\n  title: 'Cat midget',\n  description: 'A 🐈 midget in a widget',\n  layout: {\n    lg: { minW: 4, maxW: 6, defaultW: 4, minH: 8, defaultH: 8, maxH: 999 },\n    md: { minW: 2, maxW: 3, defaultW: 2, minH: 8, defaultH: 8, maxH: 999 },\n    sm: { minW: 1, maxW: 1, defaultW: 1, minH: 8, defaultH: 8, maxH: 999 }\n  },\n  options: {\n    backgroundColor: 'white'\n  }\n}\n\nCatMidget.propTypes = {\n  onResize: PT.func.isRequired\n}\n\nexport default CatMidget\n","import React, { useState } from 'react'\r\nimport PT from 'prop-types'\r\nimport _ from 'lodash'\r\nimport * as Nav from '../../../../Nav'\r\nimport NodeWidget from './NoteWidget'\r\n\r\nconst NoteOptionsWidget = ({ layout, onWidgetUpdate, widget }) => {\r\n  const [backgroundColor, setBackgroundColor] = useState(widget.options.backgroundColor)\r\n\r\n  const chooseColor = (e) => {\r\n    const color = e.target.value\r\n    const newWidget = _.cloneDeep(widget)\r\n    newWidget.options.backgroundColor = color\r\n    setBackgroundColor(color)\r\n    onWidgetUpdate(newWidget, layout)\r\n  }\r\n\r\n  return (\r\n    <div className='w-NoteOptionsWidget p-3'>\r\n      <Nav.Select\r\n        id='w-NoteOptionsWidget__color-select-id'\r\n        label='color'\r\n        value={backgroundColor || ''}\r\n        onChange={chooseColor}\r\n      >\r\n        {NodeWidget.properties.options.availableColors.map(color => {\r\n          return <option key={color} value={color}>{color}</option>\r\n        })}\r\n      </Nav.Select>\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </div>\r\n  )\r\n}\r\n\r\nNoteOptionsWidget.propTypes = {\r\n  layout: PT.object.isRequired,\r\n  onWidgetUpdate: PT.func.isRequired,\r\n  widget: PT.object.isRequired\r\n}\r\n\r\nexport default NoteOptionsWidget\r\n","import React, { useState, useEffect } from 'react'\nimport PT from 'prop-types'\nimport _ from 'lodash'\nimport ReactResizeDetector from 'react-resize-detector'\nimport NoteOptionsWidget from './NoteOptionsWidget'\nimport './NoteWidget.css'\n\nconst NoteWidget = ({ id, layout, onResize, onWidgetUpdate, widget }) => {\n  const [mounted, setMounted] = useState(false)\n  const [content, setContent] = useState(widget.options.content)\n\n  useEffect(() => {\n    if (!mounted && onResize) {\n      onResize()\n      setMounted(true)\n    }\n  }, [mounted, onResize])\n\n  const _id = id || 'widget-note-' + (layout !== undefined ? layout.i : '' + new Date().getTime())\n\n  const resize = () => {\n    const width = document.getElementById(_id).offsetWidth\n    const height = document.getElementById(_id).offsetHeight\n    onResize(width, height)\n  }\n\n  const onBlur = (e) => {\n    resize()\n    saveContent(e)\n  }\n\n  const saveContent = (e) => {\n    const newContent = e.target.innerHTML\n    const newWidget = _.cloneDeep(widget)\n    newWidget.options.content = newContent\n    setContent(newContent)\n    onWidgetUpdate(newWidget, layout)\n  }\n\n  return (\n    <div\n      id={_id}\n      className='p-3 w-NoteWidget'\n    >\n      <ReactResizeDetector\n        handleWidth\n        handleHeight\n        onResize={onResize}\n      />\n      <h4>{widget.title}</h4>\n      <div\n        className='w-NoteWidget__content'\n        contentEditable='true'\n        onBlur={onBlur}\n        dangerouslySetInnerHTML={{ __html: content }}\n      />\n    </div>\n  )\n}\n\nNoteWidget.properties = {\n  type: 'note',\n  title: 'Note widget',\n  description: 'Post-it notes',\n  layout: {\n    lg: { minW: 4, maxW: 6, defaultW: 4, minH: 5, defaultH: 5, maxH: 999 },\n    md: { minW: 2, maxW: 3, defaultW: 2, minH: 5, defaultH: 5, maxH: 999 },\n    sm: { minW: 1, maxW: 1, defaultW: 1, minH: 5, defaultH: 5, maxH: 999 }\n  },\n  options: {\n    content: '<ul><li>Eggs</li><li>Milk</li><li>Bread</li></ul>',\n    backgroundColor: 'yellow',\n    availableColors: ['white', 'yellow', 'orange', 'pink', 'lightgreen']\n  }\n}\n\nNoteWidget.edit = NoteOptionsWidget\n\nNoteWidget.propTypes = {\n  id: PT.string,\n  onResize: PT.func.isRequired,\n  widget: PT.object.isRequired,\n  layout: PT.object.isRequired,\n  onWidgetUpdate: PT.func.isRequired\n}\n\nexport default NoteWidget\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport * as Nav from '../../../../Nav'\r\n\r\nexport const Links = () => (\r\n  <div className='w-links'>\r\n    <Nav.Lenkepanel\r\n      border\r\n      className='frontPageLink bucLink'\r\n      linkCreator={(props) => (\r\n        <Link to='//google.com' {...props} />)} href='#'\r\n    >\r\n      {'Google'}\r\n    </Nav.Lenkepanel>\r\n  </div>\r\n)\r\n\r\nLinks.propTypes = {}\r\n\r\nexport default Links\r\n","import React from 'react'\nimport PT from 'prop-types'\nimport _ from 'lodash'\nimport * as Nav from '../../../../Nav'\nimport ReactResizeDetector from 'react-resize-detector'\nimport Links from './Links'\n\nimport './LinksWidget.css'\n\nconst LinksWidget = ({ onResize, onUpdate, widget }) => {\n  const onClick = () => {\n    const newWidget = _.cloneDeep(widget)\n    newWidget.options.collapsed = !newWidget.options.collapsed\n    onUpdate(newWidget)\n  }\n\n  const _onResize = (w, h) => {\n    if (onResize) {\n      // give more 70 for the panel header\n      onResize(w, h + 70)\n    }\n  }\n\n  return (\n    <div className='w-LinksWidget'>\n      <Nav.Ekspanderbartpanel\n        apen={!widget.options.collapsed}\n        tittel={widget.title}\n        onClick={onClick}\n      >\n        <div>\n          <ReactResizeDetector\n            handleWidth\n            handleHeight\n            onResize={_onResize}\n          />\n          {widget.options.collapsed === true\n            ? null\n            : <Links />}\n        </div>\n      </Nav.Ekspanderbartpanel>\n    </div>\n  )\n}\n\nLinksWidget.properties = {\n  type: 'links',\n  title: 'Links widget',\n  description: 'Widget with links',\n  layout: {\n    lg: { minW: 6, maxW: 12, defaultW: 6, minH: 2, defaultH: 4, maxH: 999 },\n    md: { minW: 3, maxW: 3, defaultW: 1, minH: 2, defaultH: 4, maxH: 999 },\n    sm: { minW: 1, maxW: 1, defaultW: 1, minH: 2, defaultH: 4, maxH: 999 }\n  },\n  options: {}\n}\n\nLinksWidget.propTypes = {\n  onResize: PT.func.isRequired,\n  onUpdate: PT.func.isRequired,\n  widget: PT.object.isRequired\n}\n\nexport default LinksWidget\n","import React, { useState, useEffect } from 'react'\nimport PT from 'prop-types'\nimport _ from 'lodash'\nimport WaitingPanel from '../../components/WaitingPanel/WaitingPanel'\nimport DashboardConfig from './config/DashboardConfig'\nimport DashboardRender from './DashboardRender'\nimport defaultLabels from './Dashboard.labels'\nimport * as DashboardAPI from './DashboardAPI'\nimport * as Widgets from './widgets'\n\nconst Dashboard = ({\n  allowedWidgets = undefined, defaultConfig, defaultWidgets, defaultLayout, defaultTab, extraWidgets,\n  id, labels, afterLayoutChange\n}) => {\n  const [editMode, setEditMode] = useState(false)\n  const [addMode, setAddMode] = useState(false)\n  const [fullFocusMode, setFullFocusMode] = useState(false)\n  const [mounted, setMounted] = useState(false)\n  const [widgets, setWidgets] = useState([])\n  const [layouts, _setLayouts] = useState({})\n  const [config, setConfig] = useState({})\n  const [currentTab, setCurrentTab] = useState(defaultTab || config.defaultTab)\n  const [backupLayouts, setBackupLayouts] = useState({})\n  const [currentBreakpoint, setCurrentBreakpoint] = useState('lg')\n  const [availableWidgets, setAvailableWidgets] = useState([])\n  const _labels = { ...defaultLabels, labels }\n  const MyWidgets = { ...extraWidgets, ...Widgets }\n\n  const initDashboard = async () => {\n    const _availableWidgets = DashboardAPI.loadAvailableWidgets(MyWidgets, allowedWidgets)\n    setAvailableWidgets(_availableWidgets)\n    const [_widgets, _layouts, _config] = await DashboardAPI.loadDashboard(id, defaultWidgets, defaultLayout, defaultConfig, allowedWidgets)\n    setWidgets(_widgets)\n    setLayouts(_layouts)\n    setConfig(_config)\n  }\n\n  useEffect(() => {\n    initDashboard()\n    setMounted(true)\n  }, [])\n\n  const onWidgetFullFocus = (focusedWidget) => {\n    if (!fullFocusMode) {\n      setFullFocusMode(true)\n      const newWidgets = widgets.map((widget) => ({\n        ...widget,\n        visible: focusedWidget.i === widget.i\n      }))\n      const newLayouts = _.cloneDeep(layouts)\n      Object.keys(newLayouts[currentTab]).forEach((breakpoint) => {\n        newLayouts[currentTab][breakpoint] = newLayouts[currentTab][breakpoint].filter((widget) => {\n          const _widget = _.find(newWidgets, (w) => w.i === widget.i)\n          return _widget.visible !== false\n        })\n      })\n      setWidgets(newWidgets)\n      setBackupLayouts(layouts)\n      setLayouts(newLayouts)\n    }\n  }\n\n  const setLayouts = (layouts) => {\n    _setLayouts(layouts)\n    if (_(afterLayoutChange).isFunction()) {\n      afterLayoutChange(layouts)\n    }\n  }\n\n  const onWidgetRestoreFocus = () => {\n    if (fullFocusMode) {\n      setFullFocusMode(false)\n      setWidgets(widgets.map((widget) => ({\n        ...widget,\n        visible: true\n      })))\n      setLayouts(backupLayouts)\n    }\n  }\n\n  const onWidgetUpdate = async (updatedWidget, layout) => {\n    const newWidgets = widgets.map((widget) => {\n      return (widget.i === layout.i) ? updatedWidget : widget\n    })\n    setWidgets(newWidgets)\n    await DashboardAPI.saveWidgets(id, newWidgets)\n  }\n\n  const onWidgetResize = (layout) => {\n    const newLayout = _.cloneDeep(layouts)\n    const index = _.findIndex(newLayout[currentTab][currentBreakpoint], { i: layout.i })\n    newLayout[currentTab][currentBreakpoint][index] = layout\n    setLayouts(newLayout)\n  }\n\n  const onWidgetDelete = (layout) => {\n    setWidgets(_.reject(widgets, { i: layout.i }))\n    const newLayout = _.cloneDeep(layouts)\n    Object.keys(newLayout[currentTab]).forEach(breakpoint => {\n      newLayout[currentTab][breakpoint] = _.reject(newLayout[currentTab][breakpoint], { i: layout.i })\n    })\n    setLayouts(newLayout)\n  }\n\n  const onLayoutChange = (layout, changedLayout) => {\n    const newLayout = _.cloneDeep(layouts)\n    newLayout[currentTab] = changedLayout\n    setLayouts(newLayout)\n  }\n\n  const onTabChange = (newTab) => {\n    setCurrentTab(newTab)\n  }\n\n  const onTabAdd = (newTab) => {\n    if (newTab === 'new') {\n      console.log('Can\\'t name new tab \\'new\\'')\n      return\n    }\n    const newLayout = _.cloneDeep(layouts)\n    newLayout[newTab] = { lg: [], md: [], sm: [] }\n    setCurrentTab(newTab)\n    setLayouts(newLayout)\n  }\n\n  const onTabDelete = (newTab) => {\n    const tabs = Object.keys(layouts)\n    if (tabs.length <= 1) {\n      console.log('wont delete, last dashboard tab')\n      return\n    }\n    setCurrentTab(_.find(tabs, (value) => value !== newTab))\n    setLayouts(_.omitBy(layouts, (value, key) => key === newTab))\n  }\n\n  const onBreakpointChange = (breakpoint) => {\n    setCurrentBreakpoint(breakpoint)\n  }\n\n  const onEditModeOn = () => {\n    setEditMode(true)\n    setAddMode(false)\n    setBackupLayouts(layouts)\n  }\n\n  const onAddChange = () => {\n    setAddMode(!addMode)\n  }\n\n  const onCancelEdit = () => {\n    setEditMode(false)\n    setAddMode(false)\n    setLayouts(backupLayouts)\n  }\n\n  const onResetEdit = async () => {\n    await DashboardAPI.resetDashboard(id, defaultWidgets, defaultLayout, defaultConfig)\n    initDashboard()\n    setAddMode(false)\n    setEditMode(false)\n  }\n\n  const onSaveEdit = async () => {\n    await DashboardAPI.saveDashboard(id, widgets, layouts, config)\n    setAddMode(false)\n    setEditMode(false)\n  }\n  if (!mounted) {\n    return <WaitingPanel className='c-dashboard__loading' />\n  }\n\n  return (\n    <DashboardRender\n      addMode={addMode} currentTab={currentTab} editMode={editMode} labels={_labels} onEditModeOn={onEditModeOn} onCancelEdit={onCancelEdit}\n      onSaveEdit={onSaveEdit} onResetEdit={onResetEdit} onAddChange={onAddChange} mounted={mounted}\n      layouts={layouts} onLayoutChange={onLayoutChange} onBreakpointChange={onBreakpointChange} currentBreakpoint={currentBreakpoint}\n      widgets={widgets} availableWidgets={availableWidgets} setWidgets={setWidgets} onWidgetUpdate={onWidgetUpdate}\n      onWidgetResize={onWidgetResize} onWidgetDelete={onWidgetDelete} onWidgetFullFocus={onWidgetFullFocus}\n      onWidgetRestoreFocus={onWidgetRestoreFocus} onTabAdd={onTabAdd} onTabDelete={onTabDelete} onTabChange={onTabChange} MyWidgets={MyWidgets}\n    />\n  )\n}\n\nDashboard.propTypes = {\n  afterLayoutChange: PT.func,\n  allowedWidgets: PT.array,\n  defaultConfig: PT.object,\n  defaultLayout: PT.object,\n  defaultTab: PT.string,\n  defaultWidgets: PT.array,\n  extraWidgets: PT.object,\n  id: PT.string.isRequired,\n  labels: PT.object\n}\n\nDashboard.defaultProps = DashboardConfig\nexport default Dashboard\n","import React from 'react'\nimport Container from './Container'\nimport Dashboard from '../applications/Dashboard/Dashboard'\nimport { Normaltekst, Panel, Systemtittel } from '../Nav'\n\nconst defaultLayout = {\n  'Side 1': {\n    lg: [\n      { i: 'w-1-note', x: 0, y: 0, w: 4, h: 5, minW: 4, maxW: 6, minH: 5, maxH: 999 }\n    ],\n    md: [\n      { i: 'w-1-note', x: 0, y: 0, w: 2, h: 6, minW: 2, maxW: 3, minH: 1, maxH: 999 }\n    ],\n    sm: [\n      { i: 'w-1-note', x: 0, y: 0, w: 1, h: 1, minW: 1, maxW: 1, minH: 1, maxH: 999 }\n    ]\n  },\n  'Side 2': {\n    lg: [\n      { i: 'w-2-smiley', x: 0, y: 0, w: 4, h: 5, minW: 4, maxW: 6, minH: 5, maxH: 999 }\n    ],\n    md: [\n      { i: 'w-2-smiley', x: 0, y: 0, w: 2, h: 6, minW: 2, maxW: 3, minH: 1, maxH: 999 }\n    ],\n    sm: [\n      { i: 'w-2-smiley', x: 0, y: 0, w: 1, h: 1, minW: 1, maxW: 1, minH: 1, maxH: 999 }\n    ]\n  },\n  'Side 3': {\n    lg: [\n      { i: 'w-3-cat', x: 0, y: 0, w: 4, h: 5, minW: 4, maxW: 6, minH: 5, maxH: 999 }\n    ],\n    md: [\n      { i: 'w-3-cat', x: 0, y: 0, w: 2, h: 6, minW: 2, maxW: 3, minH: 1, maxH: 999 }\n    ],\n    sm: [\n      { i: 'w-3-cat', x: 0, y: 0, w: 1, h: 1, minW: 1, maxW: 1, minH: 1, maxH: 999 }\n    ]\n  }\n}\n\nconst DashboardPage = () => {\n  return (\n    <Container className='w-100'>\n      <Panel className='p-4 w-100'>\n        <Systemtittel className='pt-4 pb-4'>Dashboard page</Systemtittel>\n        <Normaltekst>Dashboard Page</Normaltekst>\n        <Dashboard\n          id='eessi-pensjon-ui-demo'\n          defaultLayout={defaultLayout}\n          defaultTab='Side 1'\n          allowedWidgets={['cat', 'smiley', 'note']}\n        />\n      </Panel>\n    </Container>\n  )\n}\n\nexport default DashboardPage\n"],"sourceRoot":""}