{"version":3,"sources":["components/Alert/Alert.js","pages/Alert.js"],"names":["errorTypes","OK","ERROR","WARNING","Alert","className","error","fixed","message","onClear","status","type","_message","indexOf","console","errorMessage","push","uuid","join","printError","_fixed","_","isNil","classNames","isFunction","Icons","kind","onClick","displayName","SyntaxHighlighter","registerLanguage","jsx","IndexPage","useState","setFixed","Container","href","window","alert","language","style","prism","label","checked","onChange"],"mappings":"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","file":"static/js/29.0c8499e8.chunk.js","sourcesContent":["import React from 'react'\nimport PT from 'prop-types'\nimport classNames from 'classnames'\nimport _ from 'lodash'\nimport Icons from '../Icons/Icons'\nimport { AlertStripe } from '../../Nav'\nimport './Alert.css'\n\nexport const errorTypes = {\n  OK: 'suksess',\n  ERROR: 'feil',\n  WARNING: 'advarsel'\n}\n\nexport const Alert = ({ className, error, fixed, message, onClear, status = 'ERROR', type }) => {\n  let _message = message\n\n  const onClearClicked = () => {\n    if (_(onClear).isFunction()) {\n      onClear()\n    }\n  }\n\n  const printError = (error) => {\n    const errorMessage = []\n    if (error.status) {\n      errorMessage.push(error.status)\n    }\n    if (error.message) {\n      errorMessage.push(error.message)\n    }\n    if (error.error) {\n      errorMessage.push(error.error)\n    }\n    if (error.uuid) {\n      errorMessage.push(error.uuid)\n    }\n    return errorMessage.join(' - ')\n  }\n\n  if (!_message) {\n    return null\n  }\n\n  if (!['client', 'server'].indexOf(type) < 0) {\n    console.error('Invalid alert type: ' + type)\n    return null\n  }\n\n  if (error) {\n    _message += ': ' + printError(error)\n  }\n\n  const _fixed = _.isNil(fixed) ? type === 'client' : fixed\n  return (\n    <AlertStripe\n      className={classNames('c-alert', type, className, { fixed: _fixed })}\n      type={errorTypes[status]}\n    >\n      {_message}\n      {_(onClear).isFunction() ? <Icons className='closeIcon' kind='solidclose' onClick={onClearClicked} /> : null}\n    </AlertStripe>\n  )\n}\n\nAlert.propTypes = {\n  className: PT.string,\n  error: PT.object,\n  fixed: PT.bool,\n  message: PT.string,\n  onClear: PT.func,\n  status: PT.string,\n  type: PT.string.isRequired\n}\n\nAlert.displayName = 'Alert'\nexport default Alert\n","import React, { useState } from 'react'\nimport Container from './Container'\nimport Alert from '../components/Alert/Alert'\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx'\nimport prism from 'react-syntax-highlighter/dist/esm/styles/prism/prism'\nimport { Checkbox, Normaltekst, Panel, Systemtittel, Undertittel } from '../Nav'\n\nSyntaxHighlighter.registerLanguage('jsx', jsx)\n\nconst IndexPage = () => {\n  const [fixed, setFixed] = useState(false)\n  return (\n    <Container>\n      <Panel className='p-4'>\n        <Systemtittel className='pt-4 pb-4'>Alert</Systemtittel>\n        <Normaltekst>Changes over the original\n          <a className='ml-2' href='https://design.nav.no/components/alertstripe'>\n            AlertStripe\n          </a>\n          :\n        </Normaltekst>\n        <Undertittel className='pt-4 pb-4'>Close button with callback function</Undertittel>\n        <Alert\n          type='client' fixed={false} message='Close me for a function callback'\n          onClear={() => { window.alert('clicked') }}\n        />\n        <SyntaxHighlighter language='javascript' style={prism}>\n          {'<Alert \\n' +\n          'type=\\'client\\' \\n' +\n          'fixed={false} \\n' +\n          'message=\\'Close me for a function callback\\' \\n' +\n          'onClear={() => {window.alert(\\'clicked\\')}}\\n' +\n          '/>'}\n        </SyntaxHighlighter>\n\n        <Undertittel className='pt-4 pb-4'>Fixed mode</Undertittel>\n        <Normaltekst className='pb-4'>Moved the alert to a fixed place on the middle top of the page</Normaltekst>\n        <Checkbox label='fixed' checked={fixed} onChange={() => setFixed(!fixed)} />\n        <Alert type='client' fixed={fixed} message='Make me fixed by toggling the checkbox' />\n        <SyntaxHighlighter language='javascript' style={prism}>\n          {'<Alert \\n' +\n          'type=\\'client\\' \\n' +\n          'fixed={true} \\n' +\n          'message=\\'Make me fixed by toggling the checkbox\\' \\n' +\n          '/>'}\n        </SyntaxHighlighter>\n\n        <Undertittel className='pt-4 pb-4'>Client/server mode</Undertittel>\n        <Normaltekst>Server mode is a banner version of Alert, for more severe errors as server errors.</Normaltekst>\n        <Normaltekst className='pb-4'>It has no border and it stretches its width to the parent container's\n          width.\n        </Normaltekst>\n        <Alert type='server' message='Server error' />\n        <SyntaxHighlighter language='javascript' style={prism}>\n          {'<Alert \\n' +\n          'type=\\'server\\' \\n' +\n          'message=\\'Server error\\' \\n' +\n          '/>'}\n        </SyntaxHighlighter>\n\n        <Undertittel className='pt-4 pb-4'>Component import</Undertittel>\n        <SyntaxHighlighter language='javascript' style={prism}>\n          {'import { Alert } from \\'eessi-pensjon-ui\\''}\n        </SyntaxHighlighter>\n        <Normaltekst className='pb-4'>Default component's classname: <code>c-alert</code></Normaltekst>\n\n        <Undertittel className='pt-4 pb-4'>React props</Undertittel>\n        <table className='tabell'>\n          <thead>\n            <tr>\n              <th>Property</th>\n              <th>Type</th>\n              <th>Required</th>\n              <th>Description</th>\n              <th>Default</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>className</td>\n              <td><code>string</code></td>\n              <td>false</td>\n              <td>Additional classnames</td>\n              <td>-</td>\n            </tr>\n            <tr>\n              <td>error</td>\n              <td><code>object</code></td>\n              <td>false</td>\n              <td>Error object - params like status, message, error and uui will be appended to the message</td>\n              <td>-</td>\n            </tr>\n            <tr>\n              <td>fixed</td>\n              <td><code>boolean</code></td>\n              <td>false</td>\n              <td>Set fixed position for client alerts</td>\n              <td>false</td>\n            </tr>\n            <tr>\n              <td>message</td>\n              <td><code>string</code></td>\n              <td>false</td>\n              <td>Message to dispplay in the alert. If there is no message, the alert will not be rendered.</td>\n              <td>-</td>\n            </tr>\n            <tr>\n              <td>onClear</td>\n              <td><code>function</code></td>\n              <td>false</td>\n              <td>Callback function for a close icon. If no function is given, the close icon is not displayed.</td>\n              <td>-</td>\n            </tr>\n            <tr>\n              <td>status</td>\n              <td><code>string</code></td>\n              <td>false</td>\n              <td>Alert style. Can be <code>OK</code>, <code>WARNING</code> or <code>ERROR</code>.</td>\n              <td>ERROR</td>\n            </tr>\n            <tr>\n              <td>type</td>\n              <td><code>string</code></td>\n              <td>true</td>\n              <td>Alert type. Can be <code>client</code> or <code>server</code>.</td>\n              <td>-</td>\n            </tr>\n          </tbody>\n        </table>\n      </Panel>\n    </Container>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}