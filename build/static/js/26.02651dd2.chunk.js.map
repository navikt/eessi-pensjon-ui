{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","pages/Container.js","resources/images/earth.png","../node_modules/mustache/mustache.js","pages/WaitingPanelPage.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","Container","className","children","classNames","to","alt","src","require","module","exports","factory","mustache","objectToString","object","isFunction","escapeRegExp","string","replace","hasProperty","obj","propName","regExpTest","RegExp","test","nonSpaceRe","isWhitespace","re","testRegExp","entityMap","whiteRe","spaceRe","equalsRe","curlyRe","tagRe","Scanner","this","tail","pos","Context","view","parentContext","cache","parent","Writer","eos","scan","match","index","substring","scanUntil","search","lookup","name","primitive","hasOwnProperty","intermediateValue","names","context","lookupHit","indexOf","split","clearCache","parse","template","tags","cacheKey","join","tokens","openingTagRe","closingTagRe","closingCurlyRe","lineHasNonSpace","sections","spaces","hasTag","nonSpace","indentation","tagIndex","stripSpace","pop","compileTags","tagsToCompile","Error","start","type","chr","token","openSection","scanner","valueLength","charAt","nestedTokens","collector","numTokens","nestTokens","lastToken","squashedTokens","squashTokens","parseTemplate","render","partials","renderTokens","originalTemplate","symbol","buffer","renderSection","renderInverted","renderPartial","unescapedValue","escapedValue","rawValue","self","j","slice","indentPartial","partial","filteredIndentation","partialByNl","indentedValue","escape","version","defaultWriter","to_html","send","result","String","s","nodeName","SyntaxHighlighter","registerLanguage","jsx","WaitingPanelPage","useState","message","setMessage","label","onChange","e","target","language","style","prism","Mustache","size"],"mappings":"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","file":"static/js/26.02651dd2.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from 'react'\nimport { Systemtittel, UndertekstBold } from '../Nav'\nimport classNames from 'classnames'\nimport { Link } from 'react-router-dom'\n\nimport './Container.css'\nconst Container = ({ className, children }) => (\n  <div className={classNames('_container', className)}>\n    <aside>\n      <nav>\n        <div className='pb-3 ml-3'>\n          <Link className='p-0' to='/'><img alt='logo' className='eessi-pensjon-logo' src={require('../resources/images/earth.png')} /></Link>\n          <UndertekstBold><Link className='p-0' to='/'>EESSI Pensjon UI</Link></UndertekstBold>\n        </div>\n        <Systemtittel className='pb-3'>Applications</Systemtittel>\n        <ul className='pb-3'>\n          <li><Link to='/Dashboard'>Dashboard</Link></li>\n          <li><Link to='/PDFEditor'>PDF editor</Link></li>\n        </ul>\n        <Systemtittel className='pb-3'>Components</Systemtittel>\n        <ul className='pb-3'>\n          <li><Link to='/Alert'>Alert</Link></li>\n          <li><Link to='/Banner'>Banner</Link></li>\n          <li><Link to='/ColorPicker'>Color picker</Link></li>\n          <li><Link to='/CountryUtils'>Country utils</Link></li>\n          <li><Link to='/DatePicker'>Date picker</Link></li>\n          <li><Link to='/File'>File</Link></li>\n          <li><Link to='/FileUpload'>File upload</Link></li>\n          <li><Link to='/Flag'>Flag</Link></li>\n          <li><Link to='/Icons'>Icons</Link></li>\n          <li><Link to='/Modal'>Modal</Link></li>\n          <li><Link to='/MultipleSelect'>Multiple select</Link></li>\n          <li><Link to='/Nav'>Nav elements</Link></li>\n          <li><Link to='/Psycho'>Psycho</Link></li>\n          <li><Link to='/RefreshButton'>Refresh button</Link></li>\n          <li><Link to='/TableSorter'>Table sorter</Link></li>\n          <li><Link to='/WaitingPanel'>Waiting panel</Link></li>\n        </ul>\n      </nav>\n    </aside>\n    <article className={classNames('body', className)}>\n      {children}\n    </article>\n  </div>\n)\n\nexport default Container\n","module.exports = __webpack_public_path__ + \"static/media/earth.a7afb49e.png\";","/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false Mustache: true*/\n(function defineMustache(global, factory) {\n  if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {\n    factory(exports); // CommonJS\n  } else if (typeof define === 'function' && define.amd) {\n    define(['exports'], factory); // AMD\n  } else {\n    global.Mustache = {};\n    factory(global.Mustache); // script, wsh, asp\n  }\n})(this, function mustacheFactory(mustache) {\n  var objectToString = Object.prototype.toString;\n\n  var isArray = Array.isArray || function isArrayPolyfill(object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction(object) {\n    return typeof object === 'function';\n  }\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n\n\n  function typeStr(obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp(string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n\n\n  function hasProperty(obj, propName) {\n    return obj != null && typeof obj === 'object' && propName in obj;\n  }\n  /**\n   * Safe way of detecting whether or not the given thing is a primitive and\n   * whether it has the given property\n   */\n\n\n  function primitiveHasOwnProperty(primitive, propName) {\n    return primitive != null && typeof primitive !== 'object' && primitive.hasOwnProperty && primitive.hasOwnProperty(propName);\n  } // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n\n\n  var regExpTest = RegExp.prototype.test;\n\n  function testRegExp(re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n\n  function isWhitespace(string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml(string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap(s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   *\n   * Tokens for partials also contain two more elements: 1) a string value of\n   * indendation prior to that tag and 2) the index of that tag on that line -\n   * eg a value of 2 indicates the partial is the third tag on this line.\n   */\n\n  function parseTemplate(template, tags) {\n    if (!template) return [];\n    var lineHasNonSpace = false;\n    var sections = []; // Stack to hold section tokens\n\n    var tokens = []; // Buffer to hold the tokens\n\n    var spaces = []; // Indices of whitespace tokens on the current line\n\n    var hasTag = false; // Is there a {{tag}} on the current line?\n\n    var nonSpace = false; // Is there a non-space char on the current line?\n\n    var indentation = ''; // Tracks indentation for tags that use it\n\n    var tagIndex = 0; // Stores a count of number of tags encountered on a line\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n\n    function stripSpace() {\n      if (hasTag && !nonSpace) {\n        while (spaces.length) {\n          delete tokens[spaces.pop()];\n        }\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n\n    function compileTags(tagsToCompile) {\n      if (typeof tagsToCompile === 'string') tagsToCompile = tagsToCompile.split(spaceRe, 2);\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2) throw new Error('Invalid tags: ' + tagsToCompile);\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n    var scanner = new Scanner(template);\n    var start, type, value, chr, token, openSection;\n\n    while (!scanner.eos()) {\n      start = scanner.pos; // Match any text between tags.\n\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n            indentation += chr;\n          } else {\n            nonSpace = true;\n            lineHasNonSpace = true;\n            indentation += ' ';\n          }\n\n          tokens.push(['text', chr, start, start + 1]);\n          start += 1; // Check for whitespace on the current line.\n\n          if (chr === '\\n') {\n            stripSpace();\n            indentation = '';\n            tagIndex = 0;\n            lineHasNonSpace = false;\n          }\n        }\n      } // Match the opening tag.\n\n\n      if (!scanner.scan(openingTagRe)) break;\n      hasTag = true; // Get the tag type.\n\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe); // Get the tag value.\n\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      } // Match the closing tag.\n\n\n      if (!scanner.scan(closingTagRe)) throw new Error('Unclosed tag at ' + scanner.pos);\n\n      if (type == '>') {\n        token = [type, value, start, scanner.pos, indentation, tagIndex, lineHasNonSpace];\n      } else {\n        token = [type, value, start, scanner.pos];\n      }\n\n      tagIndex++;\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n        if (!openSection) throw new Error('Unopened section \"' + value + '\" at ' + start);\n        if (openSection[1] !== value) throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    stripSpace(); // Make sure there are no open sections when we're done.\n\n    openSection = sections.pop();\n    if (openSection) throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n    return nestTokens(squashTokens(tokens));\n  }\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n\n\n  function squashTokens(tokens) {\n    var squashedTokens = [];\n    var token, lastToken;\n\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n\n\n  function nestTokens(tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n    var token, section;\n\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n\n\n  function Scanner(string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n\n\n  Scanner.prototype.eos = function eos() {\n    return this.tail === '';\n  };\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n\n\n  Scanner.prototype.scan = function scan(re) {\n    var match = this.tail.match(re);\n    if (!match || match.index !== 0) return '';\n    var string = match[0];\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n    return string;\n  };\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n\n\n  Scanner.prototype.scanUntil = function scanUntil(re) {\n    var index = this.tail.search(re),\n        match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n\n      case 0:\n        match = '';\n        break;\n\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n    return match;\n  };\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n\n\n  function Context(view, parentContext) {\n    this.view = view;\n    this.cache = {\n      '.': this.view\n    };\n    this.parent = parentContext;\n  }\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n\n\n  Context.prototype.push = function push(view) {\n    return new Context(view, this);\n  };\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n\n\n  Context.prototype.lookup = function lookup(name) {\n    var cache = this.cache;\n    var value;\n\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this,\n          intermediateValue,\n          names,\n          index,\n          lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          intermediateValue = context.view;\n          names = name.split('.');\n          index = 0;\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           *\n           * In the case where dot notation is used, we consider the lookup\n           * to be successful even if the last \"object\" in the path is\n           * not actually an object but a primitive (e.g., a string, or an\n           * integer), because it is sometimes useful to access a property\n           * of an autoboxed primitive, such as the length of a string.\n           **/\n\n          while (intermediateValue != null && index < names.length) {\n            if (index === names.length - 1) lookupHit = hasProperty(intermediateValue, names[index]) || primitiveHasOwnProperty(intermediateValue, names[index]);\n            intermediateValue = intermediateValue[names[index++]];\n          }\n        } else {\n          intermediateValue = context.view[name];\n          /**\n           * Only checking against `hasProperty`, which always returns `false` if\n           * `context.view` is not an object. Deliberately omitting the check\n           * against `primitiveHasOwnProperty` if dot notation is not used.\n           *\n           * Consider this example:\n           * ```\n           * Mustache.render(\"The length of a football field is {{#length}}{{length}}{{/length}}.\", {length: \"100 yards\"})\n           * ```\n           *\n           * If we were to check also against `primitiveHasOwnProperty`, as we do\n           * in the dot notation case, then render call would return:\n           *\n           * \"The length of a football field is 9.\"\n           *\n           * rather than the expected:\n           *\n           * \"The length of a football field is 100 yards.\"\n           **/\n\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit) {\n          value = intermediateValue;\n          break;\n        }\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value)) value = value.call(this.view);\n    return value;\n  };\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n\n\n  function Writer() {\n    this.cache = {};\n  }\n  /**\n   * Clears all cached templates in this writer.\n   */\n\n\n  Writer.prototype.clearCache = function clearCache() {\n    this.cache = {};\n  };\n  /**\n   * Parses and caches the given `template` according to the given `tags` or\n   * `mustache.tags` if `tags` is omitted,  and returns the array of tokens\n   * that is generated from the parse.\n   */\n\n\n  Writer.prototype.parse = function parse(template, tags) {\n    var cache = this.cache;\n    var cacheKey = template + ':' + (tags || mustache.tags).join(':');\n    var tokens = cache[cacheKey];\n    if (tokens == null) tokens = cache[cacheKey] = parseTemplate(template, tags);\n    return tokens;\n  };\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   *\n   * If the optional `tags` argument is given here it must be an array with two\n   * string values: the opening and closing tags used in the template (e.g.\n   * [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   */\n\n\n  Writer.prototype.render = function render(template, view, partials, tags) {\n    var tokens = this.parse(template, tags);\n    var context = view instanceof Context ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template, tags);\n  };\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n\n\n  Writer.prototype.renderTokens = function renderTokens(tokens, context, partials, originalTemplate, tags) {\n    var buffer = '';\n    var token, symbol, value;\n\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);else if (symbol === '>') value = this.renderPartial(token, context, partials, tags);else if (symbol === '&') value = this.unescapedValue(token, context);else if (symbol === 'name') value = this.escapedValue(token, context);else if (symbol === 'text') value = this.rawValue(token);\n      if (value !== undefined) buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection(token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]); // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n\n    function subRender(template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string') throw new Error('Cannot use higher-order sections without the original template'); // Extract the portion of the original template that the section contains.\n\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n      if (value != null) buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted(token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]); // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n\n    if (!value || isArray(value) && value.length === 0) return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.indentPartial = function indentPartial(partial, indentation, lineHasNonSpace) {\n    var filteredIndentation = indentation.replace(/[^ \\t]/g, '');\n    var partialByNl = partial.split('\\n');\n\n    for (var i = 0; i < partialByNl.length; i++) {\n      if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) {\n        partialByNl[i] = filteredIndentation + partialByNl[i];\n      }\n    }\n\n    return partialByNl.join('\\n');\n  };\n\n  Writer.prototype.renderPartial = function renderPartial(token, context, partials, tags) {\n    if (!partials) return;\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n\n    if (value != null) {\n      var lineHasNonSpace = token[6];\n      var tagIndex = token[5];\n      var indentation = token[4];\n      var indentedValue = value;\n\n      if (tagIndex == 0 && indentation) {\n        indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);\n      }\n\n      return this.renderTokens(this.parse(indentedValue, tags), context, partials, indentedValue);\n    }\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue(token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null) return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue(token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null) return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue(token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '3.1.0';\n  mustache.tags = ['{{', '}}']; // All high-level mustache.* functions use this writer.\n\n  var defaultWriter = new Writer();\n  /**\n   * Clears all cached templates in the default writer.\n   */\n\n  mustache.clearCache = function clearCache() {\n    return defaultWriter.clearCache();\n  };\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n\n\n  mustache.parse = function parse(template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer. If the optional `tags` argument is given here it must be an\n   * array with two string values: the opening and closing tags used in the\n   * template (e.g. [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   */\n\n\n  mustache.render = function render(template, view, partials, tags) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' + 'but \"' + typeStr(template) + '\" was given as the first ' + 'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials, tags);\n  }; // This is here for backwards compatibility with 0.4.x.,\n\n  /*eslint-disable */\n  // eslint wants camel cased function name\n\n\n  mustache.to_html = function to_html(template, view, partials, send) {\n    /*eslint-enable*/\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  }; // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n\n\n  mustache.escape = escapeHtml; // Export these mainly for testing, but also for advanced usage.\n\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n  return mustache;\n});","import React, { useState } from 'react'\nimport Container from './Container'\nimport WaitingPanel from '../components/WaitingPanel/WaitingPanel'\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx'\nimport prism from 'react-syntax-highlighter/dist/esm/styles/prism/prism'\nimport { Input, Normaltekst, Panel, Systemtittel, Undertittel } from '../Nav'\nimport Mustache from 'mustache'\nSyntaxHighlighter.registerLanguage('jsx', jsx)\n\nconst WaitingPanelPage = () => {\n  const [message, setMessage] = useState('Vennligst vent...')\n  return (\n    <Container>\n      <Panel className='p-4'>\n        <Systemtittel className='pt-4 pb-4'>Waiting panel</Systemtittel>\n        <Normaltekst className='pb-4'>Simple waiting panel with a spinner gif and a message.</Normaltekst>\n        <Input\n          className='w-50'\n          label='Waiting message'\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n        />\n        <WaitingPanel message={message} />\n        <SyntaxHighlighter language='javascript' style={prism}>\n          {Mustache.render('<WaitingPanel message=\\'' +\n            '{{message}}' +\n            '\\'/>', { message: message })}\n        </SyntaxHighlighter>\n\n        <Undertittel className='pt-4 pb-4'>Spinner sizes</Undertittel>\n        <div className='d-flex align-items-center'>\n          <WaitingPanel className='pr-3' size='XS' message='XS' />\n          <WaitingPanel className='pr-3' size='S' message='S' />\n          <WaitingPanel className='pr-3' size='M' message='M' />\n          <WaitingPanel className='pr-3' size='L' message='L' />\n          <WaitingPanel className='pr-3' size='XL' message='XL' />\n        </div>\n        <SyntaxHighlighter language='javascript' style={prism}>\n          {'<WaitingPanel size=\\'XS\\' message=\\'XS\\'/>\\n' +\n          '<WaitingPanel size=\\'S\\' message=\\'S\\'/>\\n' +\n          '<WaitingPanel size=\\'M\\' message=\\'M\\'/>\\n' +\n          '<WaitingPanel size=\\'L\\' message=\\'L\\'/>\\n' +\n          '<WaitingPanel size=\\'XL\\' message=\\'XL\\'/>'}\n        </SyntaxHighlighter>\n\n        <Undertittel className='pt-4 pb-4'>Component import</Undertittel>\n        <SyntaxHighlighter language='javascript' style={prism}>\n          {'import { WaitingPanel } from \\'eessi-pensjon-ui\\''}\n        </SyntaxHighlighter>\n        <Normaltekst className='pb-4'>Default component's classname: <code>c-waitingPanel</code></Normaltekst>\n\n        <Undertittel className='pt-4 pb-4'>React props</Undertittel>\n        <table className='tabell'>\n          <thead>\n            <tr>\n              <th>Property</th>\n              <th>Type</th>\n              <th>Required</th>\n              <th>Description</th>\n              <th>Default</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>className</td>\n              <td><code>string</code></td>\n              <td>false</td>\n              <td>Additional classnames</td>\n              <td>-</td>\n            </tr>\n            <tr>\n              <td>message</td>\n              <td><code>string</code></td>\n              <td>false</td>\n              <td>Message to display</td>\n              <td>'Vennligst vent...'</td>\n            </tr>\n            <tr>\n              <td>size</td>\n              <td><code>string</code></td>\n              <td>false</td>\n              <td>Size of the spinner. Can be one of NavFrontendSpinner values, 'XS', 'S', 'M', 'L', 'XL'</td>\n              <td>M</td>\n            </tr>\n          </tbody>\n        </table>\n      </Panel>\n    </Container>\n  )\n}\n\nexport default WaitingPanelPage\n"],"sourceRoot":""}